{
  "name": "orm-benchmark",
  "version": "0.0.1",
  "description": "ORM Benchmark",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "engines": {
    "node": "22.19.0"
  },
  "scripts": {
    "build": "tsc --project tsconfig.json",
    "start:dev": "dotenv -e ./env/local.env -- ts-node -r tsconfig-paths/register -- ./src",
    "start:watch": "dotenv -e ./env/local.env -- nodemon",
    "start:debug": "npm run build && dotenv -e ./env/local.env -- node --inspect ./dist",
    "script": "dotenv -e ./env/local.env -- ts-node -r tsconfig-paths/register --",
    "=======docker": "===============================================================================================================",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f postgres",
    "=======all": "===============================================================================================================",
    "benchmark:all": "npm run benchmark:sequelize && npm run benchmark:prisma && npm run benchmark:typeorm && npm run benchmark:drizzle",
    "db:setup:all": "npm run docker:up && sleep 10 && npm run db:setup:sequelize && npm run db:setup:prisma && npm run db:setup:typeorm && npm run db:setup:drizzle",
    "db:seed:all": "dotenv -e ./env/local.env -- ts-node src/seed/index.ts",
    "=======sequelize": "=========================================================================================================",
    "db:migrate:sequelize": "dotenv -e ./env/local.env -- ts-node src/orm/sequelize/migrate.ts",
    "db:seed:sequelize": "dotenv -e ./env/local.env -- ts-node src/orm/sequelize/seed.ts",
    "db:setup:sequelize": "npm run db:migrate:sequelize",
    "benchmark:sequelize": "dotenv -e ./env/local.env -- ts-node src/orm/sequelize/benchmark.ts",
    "=======prisma": "=========================================================================================================",
    "db:migrate:prisma": "dotenv -e ./env/local.env -- npx prisma migrate dev --schema=./src/orm/prisma/schema.prisma",
    "db:generate:prisma": "npx prisma generate --schema=./src/orm/prisma/schema.prisma",
    "db:seed:prisma": "dotenv -e ./env/local.env -- ts-node src/orm/prisma/seed.ts",
    "db:reset:prisma": "dotenv -e ./env/local.env -- npx prisma migrate reset --schema=./src/orm/prisma/schema.prisma",
    "db:setup:prisma": "npm run db:migrate:prisma && npm run db:generate:prisma",
    "benchmark:prisma": "dotenv -e ./env/local.env -- ts-node src/orm/prisma/benchmark.ts",
    "=======typeorm": "=========================================================================================================",
    "db:migrate:typeorm": "dotenv -e ./env/local.env -- ts-node src/orm/typeorm/migrate.ts",
    "db:seed:typeorm": "dotenv -e ./env/local.env -- ts-node src/orm/typeorm/seed.ts",
    "db:setup:typeorm": "npm run db:migrate:typeorm",
    "benchmark:typeorm": "dotenv -e ./env/local.env -- ts-node src/orm/typeorm/benchmark.ts",
    "=======drizzle": "=========================================================================================================",
    "db:migrate:drizzle": "dotenv -e ./env/local.env -- ts-node src/orm/drizzle/migrate.ts",
    "db:generate:drizzle": "npx drizzle-kit generate --config=src/orm/drizzle/drizzle.config.ts",
    "db:push:drizzle": "dotenv -e ./env/local.env -- npx drizzle-kit push --config=src/orm/drizzle/drizzle.config.ts --force",
    "db:seed:drizzle": "dotenv -e ./env/local.env -- ts-node src/orm/drizzle/seed.ts",
    "db:setup:drizzle": "npm run db:migrate:drizzle && npm run db:generate:drizzle && npm run db:push:drizzle",
    "benchmark:drizzle": "dotenv -e ./env/local.env -- ts-node src/orm/drizzle/benchmark.ts",
    "=======studio": "=========================================================================================================",
    "studio:prisma": "dotenv -e ./env/local.env -- npx prisma studio --schema=./src/orm/prisma/schema.prisma",
    "studio:drizzle": "dotenv -e ./env/local.env -- npx drizzle-kit studio --config=src/orm/drizzle/drizzle.config.ts"
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts, html",
    "exec": "./node_modules/.bin/ts-node --files -r tsconfig-paths/register ./src"
  },
  "dependencies": {
    "@faker-js/faker": "^8.4.1",
    "@prisma/client": "6.15.0",
    "chalk": "^4.1.2",
    "cli-table3": "^0.6.4",
    "drizzle-kit": "0.31.4",
    "drizzle-orm": "0.44.5",
    "pg": "^8.11.5",
    "prisma": "^6.15.0",
    "reflect-metadata": "^0.1.13",
    "sequelize": "6.37.3",
    "sequelize-typescript": "^2.1.6",
    "typeorm": "0.3.20"
  },
  "devDependencies": {
    "@types/node": "^20.14.8",
    "@types/pg": "^8.15.5",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "dotenv-cli": "^7.4.2",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "nodemon": "^3.1.4",
    "prettier": "^3.3.2",
    "source-map-support": "^0.5.21",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.5.2"
  }
}
